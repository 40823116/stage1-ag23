var tipuesearch = {"pages": [{'title': 'W1分組(二人專案小組)', 'text': '標題:\xa0 2021-協同產品設計實習-stage1-ag23 \n \xa0 \xa0 \xa0 \xa0 專題題目:自動寵物飼料機 \n \xa0 \xa0 \xa0 \xa0 第一位組員學號: 40823131\xa0 |\xa0 Repository:\xa0 40823131 \xa0 | Site: \xa0 40823131 \n \xa0 \xa0 \xa0 \xa0 第二位組員學號: 40823116\xa0 |\xa0Repository:\xa0 40823116 \xa0 | Site: \xa0 40823116 \n \n', 'tags': '', 'url': 'W1分組(二人專案小組).html'}, {'title': 'W2', 'text': '', 'tags': '', 'url': 'W2.html'}, {'title': '第二周進度', 'text': 'reveal簡報: https://40823131.github.io/cd2021ag23/reveal/index.html#/1 \xa0 \n pdf: https://drive.google.com/file/d/1DD5RwcGfvvoB28qkjeQd1254qlG_Dg8D/view?usp=sharing \xa0 \n youtube: \n \n \n', 'tags': '', 'url': '第二周進度.html'}, {'title': 'W3', 'text': '', 'tags': '', 'url': 'W3.html'}, {'title': '第三周進度', 'text': 'reveal簡報: https://40823131.github.io/cd2021ag23/reveal/index.html#/2 \xa0 \n pdf: https://drive.google.com/file/d/1_WgEgyB2jomVCNfTDIRTWybTuTQjxkGc/view?usp=sharing \xa0 \n youtube: \n \n', 'tags': '', 'url': '第三周進度.html'}, {'title': 'W4', 'text': '', 'tags': '', 'url': 'W4.html'}, {'title': '利用程式方法更改影片檔名', 'text': '使用python程式編寫進而達到更改影片名稱的效果，藉由最後修改時間做為線索來判斷組別，依此線索先利用程式取得各檔案最後修改時間，將取得的時間加入檔名前端進行排序，最後再進行檔名修整，修整為所要的格式。 1.取得最後修改時間，將時間加入檔頭後，放入串列。 2.使用串列排序，排列後更名(階段性更名，此步驟重點為順序)。 3.更改為最終需要的檔名格式。 \n 程式碼如下。 \n import os\n#sorted:排序。\ndef renameFilesAndSortedByTime(dirPath):\n    #建立空串列。\n    newlist = []\n    #獲取檔名列表。\n    files = os.listdir(dirPath)\n    #獲取新增修改時間的檔名列表。\n    for j in files:\n        #獲取從1970年1月1日上午12時00分到檔案最後修改的UTC時間總共經過多少秒。\n        createTime = os.path.getmtime(dirPath + j)\n        # 將createTime中取得的秒數加入文件名稱前方，並加入串列以利排序。\n        newlist.append(str(int(createTime)) + "-" + j)\n \n    # 將串列進行排序\n    newlist = sorted(newlist)\n    #印出串列\n    print(newlist)\n    # range()內的數字經由len(newlist)決定\n    #len()主要用來傳回串列參數L的長度，也就是包含幾個元素。\n    for i in range(len(newlist)):\n        #newlist[i][11:]\n        #[i]的意思為串列中的第i項。\n        #[11:]是用來取得檔案名稱從第12字元開始到最後字元的檔名。\n        #使用上述兩個方法再配合迴圈可取得串列內所有檔案的舊檔名。\n        oldName = newlist[i][11:]\n \n        # 將秒數部分修改為序號，得到新的文件名。\n        # 一定要按照下列寫法否則後期排序更名會出現錯誤。\n        newName = newlist[i][11:]\n        if (i + 1) < 10:\n            newName = \'00\' + str(i + 1) + newName\n        elif (i + 1) > 9 and (i + 1) < 100:\n            newName = \'0\' + str(i + 1) + newName\n        else:\n            newName = str(i + 1) + newName\n        # dirpath為目標文件資料夾。\n        # 重命名文件照修改時間加序号在前方。\n        os.rename(dirPath + oldName, dirPath + newName)\n \nif __name__ == \'__main__\':\n    renameFilesAndSortedByTime("C:/Users/Administrator/Downloads/2021-03_2a_stage1/")\n    print("rename ok!")\n    path = \'C:/Users/Administrator/Downloads/2021-03_2a_stage1/\'\n    #轉入目標文件夾。\n    file=os.listdir(path)\n    print(file) #印出讀取到的檔名稱。\n    n=0 #設定初始值。\n    for i in file: #因為資料夾裡面的檔案都要重新更換名稱。\n        oldname=path+file[n] #path為路徑名稱，[n]表示第n個檔案。\n        newname=path+\'cd2021_2a_\'+str(n+1)+\'.mp4\'\n        os.rename(oldname,newname)\n        print(oldname+\'>\'+newname) \n        n=n+1 \n youtube: \n \n', 'tags': '', 'url': '利用程式方法更改影片檔名.html'}, {'title': '40823131每周進度', 'text': '', 'tags': '', 'url': '40823131每周進度.html'}, {'title': 'Week2', 'text': '', 'tags': '', 'url': 'Week2.html'}, {'title': '議題(一)', 'text': '問題:在利用Ethercalc表單分組之過程中，發現組序混亂的問題。 \n 預想之解決方式:利用python程式中的Ethercalc模組取下資料後，再經由撰寫python程式的方式，對取下之資料進行排序。若要查詢Python程式語法相關，可至本人在寒假進行的wvp2021專案中尋找資料: https://40823131.github.io/wvp2021/ \xa0 ，當中記錄了寒假本人從書中閱讀後進行整理之基礎Python語法。 \n', 'tags': '', 'url': '議題(一).html'}, {'title': '議題(二)', 'text': '建立分組網站，並進行協同網誌(blog)管理。 \n https://40823131.github.io/cd2021ag23/content/ \xa0 \n', 'tags': '', 'url': '議題(二).html'}, {'title': 'Week3', 'text': '利用coppeliasim對已完成之成品進行模擬並修改。 \n', 'tags': '', 'url': 'Week3.html'}, {'title': '初代機(version 1.0.0)', 'text': '場景檔: https://drive.google.com/file/d/1flnM51QFMFAkOVgVQ6EJE0GaNEwl4Kb4/view?usp=sharing \xa0 \n stl檔: https://drive.google.com/file/d/1OSYmHnWZztxp95ZPyKEOnh1jfADEdcgd/view?usp=sharing \xa0 \n', 'tags': '', 'url': '初代機(version 1.0.0).html'}, {'title': '貳代機(version 2.0.0)', 'text': '場景檔: https://drive.google.com/file/d/1zx1sQH35AiW-sQGoPBtUzH_rCZiGe6E_/view?usp=sharing \xa0 \n stl檔: https://drive.google.com/file/d/1om6qK5MmQifteyIR2raxF1kGzh5wU11E/view?usp=sharing \xa0 \n', 'tags': '', 'url': '貳代機(version 2.0.0).html'}, {'title': '参代機(version 3.0.0)', 'text': '場景檔: https://drive.google.com/file/d/1abmOlBmMaag_MNbuSYV6TcFEhF2tMd4a/view?usp=sharing \xa0 \n stl檔: \n', 'tags': '', 'url': '参代機(version 3.0.0).html'}, {'title': '肆代機(version 4.0.0)', 'text': '場景檔: https://drive.google.com/file/d/122SyiBWZQpqqTPrJkhfHVHMAU9kx8AMN/view?usp=sharing \xa0 \n stl檔: https://drive.google.com/file/d/1XN7ku3YdPHd53RKRVKYT9fSw2k-Rs_4s/view?usp=sharing \xa0 \n', 'tags': '', 'url': '肆代機(version 4.0.0).html'}, {'title': 'Week4', 'text': '', 'tags': '', 'url': 'Week4.html'}, {'title': '專案心得&反思', 'text': '此次的專案為雙人協同專案，在過程中也遇到許多協同的問題，如下。 \n 分組網頁的編輯與推送 \n 一開始我選用hamachi創建虛擬區域網路，讓組員連接上虛擬區網，得以編輯分組網頁，但同時編輯時會發生些許錯誤，後期學到了使用git remote方式，得到倉儲推送許可權後組長或組員皆可對網頁進行改版並推送。 \n 繪圖 \n 繪圖採用的軟體為Inventor，但也遭遇到了版本不相容的洗禮，組員使用的Inventor為2017版本，我的版本為2018版本，因此在工件編輯及修改可謂是嘗盡苦頭，因此往後的協同專題個人還是較偏向使用Onshape線上即可協同修改及操作，且無版本不相容之問題。 \n \xa0 \xa0 每週都有固定的推送專案週報(pdf,reveal,youtube videos)，遵照此原則按步就班，可以有系統的紀錄下每一週達到的事項及進度，同時也促進專案進度更有效率的完成，同時遇到困難時也可以透過交流、尋求組員的意見，進而從中獲得自己較為弱項方面的知識，也能得到許多新奇的idea，我想這就是協同的有利之處， 比起一人的閉門造車，協同才能達到更多可能。 \n', 'tags': '', 'url': '專案心得&反思.html'}, {'title': '影片排序程式', 'text': 'import os\n#sorted:排序。\ndef renameFilesAndSortedByTime(dirPath):\n    #建立空串列。\n    newlist = []\n    #獲取檔名列表。\n    files = os.listdir(dirPath)\n    #獲取新增修改時間的檔名列表。\n    for j in files:\n        #獲取從1970年1月1日上午12時00分到檔案最後修改的UTC時間總共經過多少秒。\n        createTime = os.path.getmtime(dirPath + j)\n        # 將createTime中取得的秒數加入文件名稱前方，並加入串列以利排序。\n        newlist.append(str(int(createTime)) + "-" + j)\n \n    # 將串列進行排序\n    newlist = sorted(newlist)\n    #印出串列\n    print(newlist)\n    # range()內的數字經由len(newlist)決定\n    #len()主要用來傳回串列參數L的長度，也就是包含幾個元素。\n    for i in range(len(newlist)):\n        #newlist[i][11:]\n        #[i]的意思為串列中的第i項。\n        #[11:]是用來取得檔案名稱從第12字元開始到最後字元的檔名。\n        #使用上述兩個方法再配合迴圈可取得串列內所有檔案的舊檔名。\n        oldName = newlist[i][11:]\n \n        # 將秒數部分修改為序號，得到新的文件名。\n        # 一定要按照下列寫法否則後期排序更名會出現錯誤。\n        newName = newlist[i][11:]\n        if (i + 1) < 10:\n            newName = \'00\' + str(i + 1) + newName\n        elif (i + 1) > 9 and (i + 1) < 100:\n            newName = \'0\' + str(i + 1) + newName\n        else:\n            newName = str(i + 1) + newName\n        # dirpath為目標文件資料夾。\n        # 重命名文件照修改時間加序号在前方。\n        os.rename(dirPath + oldName, dirPath + newName)\n \nif __name__ == \'__main__\':\n    renameFilesAndSortedByTime("C:/Users/Administrator/Downloads/2021-03_2a_stage1/")\n    print("rename ok!")\n    path = \'C:/Users/Administrator/Downloads/2021-03_2a_stage1/\'\n    #轉入目標文件夾。\n    file=os.listdir(path)\n    print(file) #印出讀取到的檔名稱。\n    n=0 #設定初始值。\n    for i in file: #因為資料夾裡面的檔案都要重新更換名稱。\n        oldname=path+file[n] #path為路徑名稱，[n]表示第n個檔案。\n        newname=path+\'cd2021_2a_\'+str(n+1)+\'.mp4\'\n        os.rename(oldname,newname)\n        print(oldname+\'>\'+newname) \n        n=n+1 \n', 'tags': '', 'url': '影片排序程式.html'}]};